[project]
name = "workshop-management-system"
version = "0.1.0"
description = ""
authors = [
    {name = "Zeeshan Asim",email = "zeeshanravian1@mail.com"}
]
readme = "README.md"

requires-python = ">=3.13,<3.14"
dependencies = [
    "environs (>=14.1.0,<15.0.0)",
    "sqlmodel (>=0.0.22,<0.0.23)",
    "sqlalchemy-utils (>=0.41.2,<0.42.0)",
    "types-sqlalchemy-utils (>=1.1.0,<2.0.0)",
    "alembic (>=1.14.1,<2.0.0)",
    "passlib (>=1.7.4,<2.0.0)",
    "types-passlib (>=1.7.7.20241221,<2.0.0.0)",
    "pyqt6 (>=6.8.0,<7.0.0)",
    "pyinstaller (>=6.11.1,<7.0.0)",
    "cx-freeze (>=7.2.8,<8.0.0)",
    "faker (>=36.1.1,<37.0.0)"
]

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.1.0"
pytest = "^8.3.4"
ipykernel = "^6.29.5"
jupyter = "^1.1.1"
pyright = "^1.1.392.post0"
mypy = "^1.14.1"
python-lsp-server = {extras = ["all"], version = "^1.12.0"}
black = "^24.10.0"
pyupgrade = "^3.19.1"
ruff = "^0.9.3"
bandit = "^1.8.2"
coverage = "^7.6.10"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py312"
line-length = 79

[tool.ruff.lint]
extend-select = [
    "D",        # pydocstyle
    "E",        # pycodestyle errors
    "W",        # pycodestyle warnings
    "F",        # pyflakes
    "I",        # isort
    "B",        # flake8-bugbear
    "C4",       # flake8-comprehensions
    "UP",       # pyupgrade
    "ARG001",   # unused arguments in functions
    "RUF",      # ruff dev's own rules
    "SIM",      # pyflakes simplicity
    "C90",      # more complexity rules
]
ignore = [
    "E501",     # line too long, handled by black
    "B008",     # do not perform function calls in argument defaults
    "W191",     # indentation contains tabs
    "B904",     # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
combine-as-imports = true
split-on-trailing-comma = false
