[project]
name = "workshop-management-system"
version = "0.1.0"
description = ""
authors = [
    {name = "Zeeshan Asim",email = "zeeshanravian1@gmail.com"}
]
readme = "README.md"

requires-python = ">=3.13,<3.14"
dependencies = [
    "sqlmodel (>=0.0.22,<0.0.23)",
    "sqlalchemy-utils (>=0.41.2,<0.42.0)",
    "types-sqlalchemy-utils (>=1.1.0,<2.0.0)",
    "pydantic[email] (>=2.10.6,<3.0.0)",
    "pydantic-extra-types (>=2.10.2,<3.0.0)",
    "alembic (>=1.14.1,<2.0.0)",
    "phonenumbers (>=8.13.54,<9.0.0)",
    "pyqt6 (>=6.8.1,<7.0.0)",
    "pyinstaller (>=6.12.0,<7.0.0)"
]

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.1.0"
pytest-asyncio = "^0.25.3"
httpie = "^3.2.4"
ipykernel = "^6.29.5"
jupyter = "^1.1.1"
radon = "^6.0.1"
pyright = "^1.1.393"
mypy = "^1.15.0"
python-lsp-server = {extras = ["all"], version = "^1.12.2"}
black = "^25.1.0"
pyupgrade = "^3.19.1"
ruff = "^0.9.6"
skjold = "^0.6.2"
bandit = "^1.8.2"
coverage = "^7.6.11"
logfire = "^3.5.3"
gitlint = "^0.19.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py313"
line-length = 79

[tool.ruff.lint]
extend-select = [
    "D",        # pydocstyle
    "E",        # pycodestyle errors
    "W",        # pycodestyle warnings
    "F",        # pyflakes
    "I",        # isort
    "B",        # flake8-bugbear
    "C4",       # flake8-comprehensions
    "UP",       # pyupgrade
    "ARG001",   # unused arguments in functions
    "RUF",      # ruff dev's own rules
    "SIM",      # pyflakes simplicity
    "C90",      # more complexity rules
]
ignore = [
    "E501",     # line too long, handled by black
    "B008",     # do not perform function calls in argument defaults
    "W191",     # indentation contains tabs
    "B904",     # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
combine-as-imports = true
split-on-trailing-comma = false

[tool.skjold]
sources = ["github", "pyup", "gemnasium"]  # Sources to check against.
report_only = false                        # Exit with non-zero exit code on findings.
report_format = 'cli'                      # Output findings as `json`. Default is 'cli'.
cache_dir = '.skjold_cache'                # Cache location (default: `~/.skjold/cache`).
cache_expires = 86400                      # Cache max. age.
ignore_file = '.skjoldignore'              # Ignorefile location (default `.skjoldignore`).
verbose = true                             # Be verbose.
